#!/bin/bash
set -eu -o pipefail

function help () {
	echo "$(basename ${0}): Install Java on windows"
	echo
	echo "Usage: $(basename ${0})"
	echo
}

SELF_DIR=$(cd $(dirname ${0}) && pwd -P)
SELF=${SELF_DIR}/$(basename ${0})

. ${SELF_DIR}/../../../common/source.bash

if which java 2> /dev/null; then
	echo -e "${CFMT_INFO}Java is already installed${CFMT_NORMAL}" >&2
	exit 0
fi

. "${SELF_DIR}/../install-common"
install jq jq

echo -e "${CFMT_INFO}Installing Java${CFMT_NORMAL}" >&2
ARCH=$(${COMMON_DIR}/osinfo -a)
case ${ARCH} in
	x86)
		JAVA_ARCH=x32
		;;
	x86_64)
		JAVA_ARCH=x64
		;;
	*)
		fail "Unknown architecture: ${ARCH}"
		;;
esac
JAVA_VERSION="11"
JAVA_IMAGE_TYPE="jdk"

INSTALL_TEMPDIR=$(mktemp -d)
trap "{ rm -rf ${INSTALL_TEMPDIR}; }" EXIT
echo -e "${CFMT_INFO}Downloading Java ${JAVA_VERSION} ${JAVA_ARCH}${CFMT_NORMAL} (temp dir is ${INSTALL_TEMPDIR})" >&2

JAVA_URL=$(curl -L "https://api.adoptium.net/v3/assets/latest/${JAVA_VERSION}/hotspot?release=latest&jvm_impl=hotspot&vendor=adoptium&" | jq -r ".[] | select(.binary.image_type == \"${JAVA_IMAGE_TYPE}\" and .binary.os == \"windows\" and .binary.architecture == \"${JAVA_ARCH}\") | .binary.installer.link | .")
pushd "${INSTALL_TEMPDIR}" > /dev/null 2>&1
	curl -L -o "java.msi" "${JAVA_URL}"
	msiexec /i "$(cygpath -w "${INSTALL_TEMPDIR}/java.msi")" INSTALLLEVEL=3 REINSTALLMODE=amus /passive
popd > /dev/null 2>&1

echo -e "${CFMT_SUCCESS}Successfully installed Java${CFMT_NORMAL}!" >&2
