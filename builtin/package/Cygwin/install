#!/bin/bash
set -eu -o pipefail

function help () {
	echo "$(basename ${0}): Install packages on Cygwin"
	echo
	echo "Usage: $(basename ${0}) <package>*"
	echo
}

SELF_DIR=$(cd $(dirname ${0}) && pwd -P)
SELF=${SELF_DIR}/$(basename ${0})

. ${SELF_DIR}/../../common/source.bash

# Note that there can be more than one package to install...
args_min 1

# Look through all the packages and install the special ones first
PACKAGES_CYGWIN=()
for ARG in "$@"; do
	SPECIALSCRIPT="${SELF_DIR}/special/${ARG}"
    if [[ -x "${SPECIALSCRIPT}" ]]; then
    	${SPECIALSCRIPT}
    else
    	PACKAGES_CYGWIN+=("${ARG}")
    fi
done

# Any non-special packages should be installed by the standard cygwin installer
if [ ${#PACKAGES_CYGWIN[@]} -ne 0 ]; then
	EXECUTABLE_NAME="setup-$(${COMMON_DIR}/osinfo -a).exe"
	EXECUTABLE_FILE="${SELF_DIR}/${EXECUTABLE_NAME}"
	# Download the cygwin installer if it's not already cached (TODO: Create a warehouse for this to version it better, they must have a proper download site with versions somewhere I can use to allow pallet updates to take this over)
	if [ ! -f ${EXECUTABLE_FILE} ]; then
		echo -e "${CFMT_INFO}Downloading cygwin installer ${CFMT_NORMAL}" >&2
		curl https://cygwin.com/${EXECUTABLE_NAME} -o ${EXECUTABLE_FILE}
		chmod +x ${EXECUTABLE_FILE}
	fi
	PACKAGELIST=$(IFS=,; echo "${PACKAGES_CYGWIN[*]}")
	echo -e "${CFMT_INFO}Intalling ${PACKAGELIST} using cygwin installer ${CFMT_NORMAL}" >&2
	echo -e "${CFMT_INFO}Be prepared for a UAC password prompt.${CFMT_NORMAL}" >&2
	echo -e "${CFMT_INFO}You may need to press <ENTER> in the powershell window once the installer completes!${CFMT_NORMAL}" >&2
	sleep 2
	
	PS1_TEMPDIR=$(mktemp -d)
	trap "{ rm -rf ${PS1_TEMPDIR}; }" EXIT
	cat > ${PS1_TEMPDIR}/install.ps1 <<EOF
\$ErrorActionPreference = "Stop"
$(cygpath -w ${EXECUTABLE_FILE}) -q -W -P ${PACKAGELIST}
pause
EOF
	# Use powershell to run the installer
	powershell -NoProfile -ExecutionPolicy Bypass -Command "\$p = Start-Process powershell \"-Command $(cygpath -w ${PS1_TEMPDIR}/install.ps1)\" -Verb runAs -PassThru -Wait; Exit \$p.ExitCode"
fi

echo -e "${CFMT_SUCCESS}Intalled ${@}${CFMT_NORMAL}" >&2
