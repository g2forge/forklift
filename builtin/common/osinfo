#!/bin/bash
set -eu -o pipefail

function help () {
	echo "$(basename ${0}): Retrieve information about the operating system & distribution"
	echo
	echo "Usage: $(basename ${0}) [options]"
	echo -e "\toptions:"
	echo -e "\t\t-d|--distro:  Get the distro (RHEL, OSX, Ubuntu, Cygwin, AmazonLinux)"
	echo -e "\t\t-v|--version: Get the version of the distribution"
	echo -e "\t\t-a|--arch:    Get the architecture"
	echo
}

SELF_DIR=$(cd $(dirname ${0}) && pwd -P)
SELF=${SELF_DIR}/$(basename ${0})

. ${SELF_DIR}/source.bash

while [[ $# -gt 0 ]]; do
	KEY="${1}"
	case ${KEY} in
		-h|--help)
		help
		;;
		-d|--distro)
		if which lsb_release >/dev/null 2>&1; then
			ID=$(lsb_release -id | head -n 1 | sed -e 's/.*:\s*//')
			case ${ID} in
				RedHatEnterpriseServer)
				echo "RHEL"
				;;
				*)
				echo "${ID}"
				;;
			esac
		elif which sw_vers >/dev/null 2>&1; then
			echo "OSX"
		else
			UNAMES="$(uname -s)"
			case "${UNAMES}" in
				Linux)
					if [ -f /etc/os-release ]; then
						NAME=$(bash -c '. /etc/os-release; echo ${NAME}')
						case "${NAME}" in
							"Amazon Linux") echo "AmazonLinux";;
							"Red Hat Enterprise Linux Server") echo "RHEL";;
							*) echo "Unknown";;
						esac
					else
						echo "Unknown"
					fi
					;;
				CYGWIN*) echo "Cygwin";;
				*)       echo "Unknown";;
			esac
		fi
		;;
		-v|--version)
		DISTRO=$($0 -d)
		case ${DISTRO} in
			OSX)
			sw_vers | grep "ProductVersion" | sed -e 's/.*:[	 ]*//'
			;;
			Debian|Ubuntu)
			lsb_release -r | sed -e 's/.*:\s*//'
			;;
			RHEL)
			bash -c '. /etc/os-release; echo ${VERSION_ID}'
			;;
			Cygwin)
			uname -r | sed -e 's/\([^(]*\)(.*/\1/'
			;;
			AmazonLinux)
			uname -r | sed -e 's/-.*//'
			;;
			*)
			echo "Unknown"
			;;
		esac
		;;
		-a|--arch)
		DISTRO=$($0 -d)
		case ${DISTRO} in
			Cygwin|OSX)
			uname -m
			;;
			*)
			uname -i
			;;
		esac
		;;
		*)
		fail "Unknown argument: ${KEY}"
		;;
	esac
	shift
done
